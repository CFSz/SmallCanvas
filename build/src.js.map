{
  "version": 3,
  "sources": [
    "HashObject.ts",
    "EventPool.ts",
    "DOM.ts",
    "DisplayObject.ts",
    "DisplayPool.ts",
    "sys.ts"
  ],
  "names": [
    "sc",
    "sc.HashObject",
    "sc.HashObject.constructor",
    "sc.EventPool",
    "sc.EventPool.constructor",
    "sc.DOM",
    "sc.DOM.constructor",
    "sc.DOM.canvas",
    "sc.DisplayObject",
    "sc.DisplayObject.constructor",
    "sc.DisplayObject.init",
    "sc.DisplayObject.offsetWidth",
    "sc.DisplayObject.offsetHeight",
    "sc.DisplayObject.offsetX",
    "sc.DisplayObject.offsetY",
    "sc.DisplayObject.textureLoadHandle",
    "sc.DisplayObject.addEventListener",
    "sc.DisplayObject.appendToStage",
    "sc.DisplayPool",
    "sc.DisplayPool.constructor",
    "sc.init",
    "sc.render"
  ],
  "mappings": "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",
  "file": "src.js",
  "sourcesContent": [
    "/**\r\n * 为对象提供一个唯一的标识码\r\n */\r\nmodule sc{\r\n    export class HashObject{\r\n        public constructor(){\r\n            this.hashCode=HashObject.hashCount++;\r\n        }\r\n        public hashCode;\r\n        static hashCount=1;\r\n    }\r\n}",
    "/**\n * 事件池\n */\nmodule sc{\n    export class EventPool{\n        public static eventPool={};\n    }\n}",
    "/**\r\n * DOM\r\n */\r\nmodule sc{\r\n    export class DOM{\r\n        public static _canvas=document.querySelector('canvas')||document.createElement('canvas');\r\n        public static ctx=DOM._canvas['getContext']('2d');\r\n        public static set canvas(dom){\r\n            DOM.ctx=dom['getContext']('2d');\r\n        }\r\n        public static get canvas(){\r\n            return DOM._canvas;\r\n        }\r\n    }\r\n}",
    "/**\r\n * 以图片为基础的显示对象\r\n */\r\n/// <reference path=\"HashObject.ts\" />\r\n/// <reference path=\"EventPool.ts\" />\r\n/// <reference path=\"DOM.ts\" />\r\nmodule sc{\r\n    export class DisplayObject extends sc.HashObject{\r\n        /**\r\n         * 显示对象,构建世界的基础\r\n         * @param canvas canvasDOM\r\n         * @param textureSrc 资源地址\r\n         * @param x 目标坐标x\r\n         * @param y 目标坐标y\r\n         * @param width 目标宽度\r\n         * @param height 目标高度\r\n         * @param anchorX 锚点X\r\n         * @param anchorY 锚点Y\r\n         */\r\n        public constructor(options){\r\n            super();\r\n            options=options||{};\r\n            this.texture=new Image();\r\n            this.texture.src=options.textureSrc||'images/error.png';\r\n            this.texture.onload=this.textureLoadHandle.bind(this);\r\n            this.texture[\"ready\"]=false;\r\n            this.x=options.x||0;\r\n            this.y=options.y||0;\r\n            this.width=options.width||0;\r\n            this.height=options.height||0;\r\n            this.anchorX=options.anchorX||0;\r\n            this.anchorY=options.anchorY||0;\r\n            this.scale=options.scale||1;\r\n            this.init();\r\n        }\r\n\r\n\r\n        public texture;//图片素材\r\n        public x;//坐标x\r\n        public y;//坐标y\r\n        public width;//宽度\r\n        public height;//高度\r\n        public anchorX;//X偏移倍数\r\n        public anchorY;//Y偏移倍数\r\n        public scale=1;\r\n        public eventPool={};\r\n\r\n\r\n        /**\r\n         * 初始化\r\n         */\r\n        private init(){\r\n//            this.eventPoolHash=smallWheel.ads;\r\n            this.appendToStage();\r\n        }\r\n\r\n        /**\r\n         * 实际宽度\r\n         * @returns {number}\r\n         */\r\n        public get offsetWidth(){\r\n            return this.width*this.scale;\r\n        }\r\n\r\n        /**\r\n         * 实际高度\r\n         * @returns {number}\r\n         */\r\n        public get offsetHeight(){\r\n            return this.width*this.scale;\r\n        }\r\n\r\n        /**\r\n         * 实际x\r\n         * @returns {number}\r\n         */\r\n        public get offsetX(){\r\n            return this.x-this.width*this.anchorX;\r\n        }\r\n\r\n        /**\r\n         * 实际y\r\n         * @returns {number}\r\n         */\r\n        public get offsetY(){\r\n            return this.y-this.height*this.anchorY;\r\n        }\r\n\r\n        /**\r\n         * 处理资源加载完成事件\r\n         */\r\n        private textureLoadHandle(){\r\n            this.texture[\"ready\"]=true;\r\n            this.width=this.texture.width;\r\n            this.height=this.texture.height;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * 绑定时间\r\n         * @param type 事件类型\r\n         * @param successHandle 判定成功的事件处理\r\n         * @param failHandle 判定失败的事件处理\r\n         */\r\n        public addEventListener(type,successHandle,failHandle){\r\n            var self=this;\r\n            this.eventPool[type]||(this.eventPool[type]=[]);\r\n            this.eventPool[type].push(\r\n                {\r\n                    x:self.offsetX,\r\n                    y:self.offsetY,\r\n                    width:self.offsetWidth,\r\n                    height:self.offsetHeight,\r\n                    type:type,\r\n                    successHandle:successHandle,\r\n                    failHandle:failHandle\r\n                }\r\n            );\r\n        }\r\n\r\n        /**\r\n         * 绘制显示对象\r\n         */\r\n        public appendToStage(){\r\n            sc.DisplayPool.DisplayHash[this.hashCode]=this;\r\n        }\r\n\r\n    }\r\n}",
    "/**\n * 显示对象池\n */\nmodule sc{\n    export class DisplayPool{\n        public static DisplayHash={};\n    }\n}",
    "/**\n * 程序入口\n */\nmodule sc{\n    export function init(dom?){\n        //sc.DOM.canvas=dom||document.querySelector('canvas');\n        render();\n        return sc;\n    }\n    export function render(){\n        for(var disObjIndex in sc.DisplayPool.DisplayHash){\n            var disObj=sc.DisplayPool.DisplayHash[disObjIndex];\n            sc.DOM.ctx.clearRect(0,0,sc.DOM.canvas.offsetWidth,sc.DOM.canvas.offsetHeight);\n            sc.DOM.ctx.drawImage(disObj.texture,disObj.offsetX,disObj.offsetY,disObj.offsetWidth,disObj.offsetHeight);\n        }\n        window.requestAnimationFrame(sc.render)\n    }\n}"
  ],
  "sourceRoot": "/source/"
}
{"version":3,"sources":["HashObject.ts","EventPool.ts","DOM.ts","DisplayObject.ts","DisplayPool.ts","sys.ts"],"names":["smallcanvas","smallcanvas.HashObject","smallcanvas.HashObject.constructor","smallcanvas.EventPool","smallcanvas.EventPool.constructor","smallcanvas.DOM","smallcanvas.DOM.constructor","smallcanvas.DOM.canvas","smallcanvas.DisplayObject","smallcanvas.DisplayObject.constructor","smallcanvas.DisplayObject.init","smallcanvas.DisplayObject.offsetWidth","smallcanvas.DisplayObject.offsetHeight","smallcanvas.DisplayObject.offsetX","smallcanvas.DisplayObject.offsetY","smallcanvas.DisplayObject.textureLoadHandle","smallcanvas.DisplayObject.addEventListener","smallcanvas.DisplayObject.appendToStage","smallcanvas.DisplayPool","smallcanvas.DisplayPool.constructor","smallcanvas.init","smallcanvas.render"],"mappings":"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","file":"src.js","sourcesContent":["/**\r\n * 为对象提供一个唯一的标识码\r\n */\r\nmodule smallcanvas {\r\n    export class HashObject {\r\n        public constructor() {\r\n            this.hashCode = HashObject.hashCount++;\r\n        }\r\n\r\n        public hashCode;\r\n        static hashCount = 1;\r\n    }\r\n}","/**\n * 事件池\n */\nmodule smallcanvas {\n    export class EventPool {\n        public static eventPool = {};\n    }\n}","/**\r\n * DOM\r\n */\r\nmodule smallcanvas {\r\n    export class DOM {\r\n        public static _canvas = document.querySelector('canvas') || document.createElement('canvas');\r\n        public static ctx = DOM._canvas['getContext']('2d');\r\n\r\n        public static set canvas(dom) {\r\n            DOM.ctx = dom['getContext']('2d');\r\n        }\r\n\r\n        public static get canvas() {\r\n            return DOM._canvas;\r\n        }\r\n    }\r\n}","/**\r\n * 以图片为基础的显示对象\r\n */\r\n/// <reference path=\"HashObject.ts\" />\r\n/// <reference path=\"EventPool.ts\" />\r\n/// <reference path=\"DOM.ts\" />\r\nmodule smallcanvas {\r\n    export class DisplayObject extends smallcanvas.HashObject {\r\n        /**\r\n         * 显示对象,构建世界的基础\r\n         * @param canvas canvasDOM\r\n         * @param src 资源地址\r\n         * @param x 目标坐标x\r\n         * @param y 目标坐标y\r\n         * @param width 目标宽度\r\n         * @param height 目标高度\r\n         * @param anchorX 锚点X\r\n         * @param anchorY 锚点Y\r\n         * @param scale 缩放倍数\r\n         */\r\n        public constructor(options) {\r\n            super();\r\n            options = options || {};\r\n            this.texture = new Image();\r\n            this.texture.src = options.src || 'images/error.png';\r\n            this.texture.onload = this.textureLoadHandle.bind(this);\r\n            this.texture[\"ready\"] = false;\r\n            this.x = options.x || 0;\r\n            this.y = options.y || 0;\r\n            this.width = options.width || 0;\r\n            this.height = options.height || 0;\r\n            this.anchorX = options.anchorX || 0;\r\n            this.anchorY = options.anchorY || 0;\r\n            this.scale = options.scale || 1;\r\n            this.init();\r\n        }\r\n\r\n\r\n        public texture;//图片素材\r\n        public x;//坐标x\r\n        public y;//坐标y\r\n        public width;//宽度\r\n        public height;//高度\r\n        public anchorX;//X偏移倍数\r\n        public anchorY;//Y偏移倍数\r\n        public scale = 1;\r\n        public eventPool = {};\r\n\r\n\r\n        /**\r\n         * 初始化\r\n         */\r\n        private init() {\r\n//            this.eventPoolHash=smallWheel.ads;\r\n            this.appendToStage();\r\n        }\r\n\r\n        /**\r\n         * 实际宽度\r\n         * @returns {number}\r\n         */\r\n        public get offsetWidth() {\r\n            return this.width * this.scale;\r\n        }\r\n\r\n        /**\r\n         * 实际高度\r\n         * @returns {number}\r\n         */\r\n        public get offsetHeight() {\r\n            return this.width * this.scale;\r\n        }\r\n\r\n        /**\r\n         * 实际x\r\n         * @returns {number}\r\n         */\r\n        public get offsetX() {\r\n            return this.x - this.width * this.anchorX;\r\n        }\r\n\r\n        /**\r\n         * 实际y\r\n         * @returns {number}\r\n         */\r\n        public get offsetY() {\r\n            return this.y - this.height * this.anchorY;\r\n        }\r\n\r\n        /**\r\n         * 处理资源加载完成事件\r\n         */\r\n        private textureLoadHandle() {\r\n            this.texture[\"ready\"] = true;\r\n            this.width = this.texture.width;\r\n            this.height = this.texture.height;\r\n        }\r\n\r\n\r\n        /**\r\n         * 绑定时间\r\n         * @param type 事件类型\r\n         * @param successHandle 判定成功的事件处理\r\n         * @param failHandle 判定失败的事件处理\r\n         */\r\n        public addEventListener(type, successHandle, failHandle) {\r\n            var self = this;\r\n            this.eventPool[type] || (this.eventPool[type] = []);\r\n            this.eventPool[type].push(\r\n                {\r\n                    x: self.offsetX,\r\n                    y: self.offsetY,\r\n                    width: self.offsetWidth,\r\n                    height: self.offsetHeight,\r\n                    type: type,\r\n                    successHandle: successHandle,\r\n                    failHandle: failHandle\r\n                }\r\n            );\r\n        }\r\n\r\n        /**\r\n         * 绘制显示对象\r\n         */\r\n        public appendToStage() {\r\n            smallcanvas.DisplayPool.DisplayHash[this.hashCode] = this;\r\n        }\r\n\r\n    }\r\n}","/**\n * 显示对象池\n */\nmodule smallcanvas {\n    export class DisplayPool {\n        public static DisplayHash = {};\n    }\n}","/**\n * 程序入口\n */\nmodule smallcanvas {\n    export function init(dom?) {\n        //smallcanvas.DOM.canvas=dom||document.querySelector('canvas');\n        render();\n        return smallcanvas;\n    }\n\n    export function render() {\n        for (var disObjIndex in smallcanvas.DisplayPool.DisplayHash) {\n            var disObj = smallcanvas.DisplayPool.DisplayHash[disObjIndex];\n            smallcanvas.DOM.ctx.clearRect(0, 0, smallcanvas.DOM.canvas['offsetWidth'], smallcanvas.DOM.canvas['offsetHeight']);\n            smallcanvas.DOM.ctx.drawImage(disObj.texture, disObj.offsetX, disObj.offsetY, disObj.offsetWidth, disObj.offsetHeight);\n        }\n        window.requestAnimationFrame(smallcanvas.render)\n    }\n}"],"sourceRoot":"/source/"}